"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fixInstallments = fixInstallments;
exports.sortTransactionsByDate = sortTransactionsByDate;
exports.filterOldTransactions = filterOldTransactions;

var _moment = _interopRequireDefault(require("moment"));

var _lodash = _interopRequireDefault(require("lodash"));

var _transactions = require("../transactions");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function isNormalTransaction(txn) {
  return txn && txn.type === _transactions.TransactionTypes.Normal;
}

function isInstallmentTransaction(txn) {
  return txn && txn.type === _transactions.TransactionTypes.Installments;
}

function isNonInitialInstallmentTransaction(txn) {
  return isInstallmentTransaction(txn) && !!txn.installments && txn.installments.number > 1;
}

function isInitialInstallmentTransaction(txn) {
  return isInstallmentTransaction(txn) && !!txn.installments && txn.installments.number === 1;
}

function fixInstallments(txns) {
  return txns.map(txn => {
    const clonedTxn = _objectSpread({}, txn);

    if (isInstallmentTransaction(clonedTxn) && isNonInitialInstallmentTransaction(clonedTxn) && clonedTxn.installments) {
      const dateMoment = (0, _moment.default)(clonedTxn.date);
      const actualDateMoment = dateMoment.add(clonedTxn.installments.number - 1, 'month');
      clonedTxn.date = actualDateMoment.toISOString();
    }

    return clonedTxn;
  });
}

function sortTransactionsByDate(txns) {
  return _lodash.default.sortBy(txns, ['date']);
}

function filterOldTransactions(txns, startMoment, combineInstallments) {
  return txns.filter(txn => {
    const combineNeededAndInitialOrNormal = combineInstallments && (isNormalTransaction(txn) || isInitialInstallmentTransaction(txn));
    return !combineInstallments && startMoment.isSameOrBefore(txn.date) || combineNeededAndInitialOrNormal && startMoment.isSameOrBefore(txn.date);
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9oZWxwZXJzL3RyYW5zYWN0aW9ucy50cyJdLCJuYW1lcyI6WyJpc05vcm1hbFRyYW5zYWN0aW9uIiwidHhuIiwidHlwZSIsIlRyYW5zYWN0aW9uVHlwZXMiLCJOb3JtYWwiLCJpc0luc3RhbGxtZW50VHJhbnNhY3Rpb24iLCJJbnN0YWxsbWVudHMiLCJpc05vbkluaXRpYWxJbnN0YWxsbWVudFRyYW5zYWN0aW9uIiwiaW5zdGFsbG1lbnRzIiwibnVtYmVyIiwiaXNJbml0aWFsSW5zdGFsbG1lbnRUcmFuc2FjdGlvbiIsImZpeEluc3RhbGxtZW50cyIsInR4bnMiLCJtYXAiLCJjbG9uZWRUeG4iLCJkYXRlTW9tZW50IiwiZGF0ZSIsImFjdHVhbERhdGVNb21lbnQiLCJhZGQiLCJ0b0lTT1N0cmluZyIsInNvcnRUcmFuc2FjdGlvbnNCeURhdGUiLCJfIiwic29ydEJ5IiwiZmlsdGVyT2xkVHJhbnNhY3Rpb25zIiwic3RhcnRNb21lbnQiLCJjb21iaW5lSW5zdGFsbG1lbnRzIiwiZmlsdGVyIiwiY29tYmluZU5lZWRlZEFuZEluaXRpYWxPck5vcm1hbCIsImlzU2FtZU9yQmVmb3JlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7OztBQUlBLFNBQVNBLG1CQUFULENBQTZCQyxHQUE3QixFQUFnRDtBQUM5QyxTQUFPQSxHQUFHLElBQUlBLEdBQUcsQ0FBQ0MsSUFBSixLQUFhQywrQkFBaUJDLE1BQTVDO0FBQ0Q7O0FBRUQsU0FBU0Msd0JBQVQsQ0FBa0NKLEdBQWxDLEVBQXFEO0FBQ25ELFNBQU9BLEdBQUcsSUFBSUEsR0FBRyxDQUFDQyxJQUFKLEtBQWFDLCtCQUFpQkcsWUFBNUM7QUFDRDs7QUFFRCxTQUFTQyxrQ0FBVCxDQUE0Q04sR0FBNUMsRUFBdUU7QUFDckUsU0FBT0ksd0JBQXdCLENBQUNKLEdBQUQsQ0FBeEIsSUFBaUMsQ0FBQyxDQUFDQSxHQUFHLENBQUNPLFlBQXZDLElBQXVEUCxHQUFHLENBQUNPLFlBQUosQ0FBaUJDLE1BQWpCLEdBQTBCLENBQXhGO0FBQ0Q7O0FBRUQsU0FBU0MsK0JBQVQsQ0FBeUNULEdBQXpDLEVBQW9FO0FBQ2xFLFNBQU9JLHdCQUF3QixDQUFDSixHQUFELENBQXhCLElBQWlDLENBQUMsQ0FBQ0EsR0FBRyxDQUFDTyxZQUF2QyxJQUF1RFAsR0FBRyxDQUFDTyxZQUFKLENBQWlCQyxNQUFqQixLQUE0QixDQUExRjtBQUNEOztBQUVNLFNBQVNFLGVBQVQsQ0FBeUJDLElBQXpCLEVBQTZEO0FBQ2xFLFNBQU9BLElBQUksQ0FBQ0MsR0FBTCxDQUFVWixHQUFELElBQXNCO0FBQ3BDLFVBQU1hLFNBQVMscUJBQVFiLEdBQVIsQ0FBZjs7QUFFQSxRQUFJSSx3QkFBd0IsQ0FBQ1MsU0FBRCxDQUF4QixJQUF1Q1Asa0NBQWtDLENBQUNPLFNBQUQsQ0FBekUsSUFDRkEsU0FBUyxDQUFDTixZQURaLEVBQzBCO0FBQ3hCLFlBQU1PLFVBQVUsR0FBRyxxQkFBT0QsU0FBUyxDQUFDRSxJQUFqQixDQUFuQjtBQUNBLFlBQU1DLGdCQUFnQixHQUFHRixVQUFVLENBQUNHLEdBQVgsQ0FBZUosU0FBUyxDQUFDTixZQUFWLENBQXVCQyxNQUF2QixHQUFnQyxDQUEvQyxFQUFrRCxPQUFsRCxDQUF6QjtBQUNBSyxNQUFBQSxTQUFTLENBQUNFLElBQVYsR0FBaUJDLGdCQUFnQixDQUFDRSxXQUFqQixFQUFqQjtBQUNEOztBQUNELFdBQU9MLFNBQVA7QUFDRCxHQVZNLENBQVA7QUFXRDs7QUFFTSxTQUFTTSxzQkFBVCxDQUFnQ1IsSUFBaEMsRUFBcUQ7QUFDMUQsU0FBT1MsZ0JBQUVDLE1BQUYsQ0FBU1YsSUFBVCxFQUFlLENBQUMsTUFBRCxDQUFmLENBQVA7QUFDRDs7QUFFTSxTQUFTVyxxQkFBVCxDQUErQlgsSUFBL0IsRUFDTFksV0FESyxFQUNnQkMsbUJBRGhCLEVBQzhDO0FBQ25ELFNBQU9iLElBQUksQ0FBQ2MsTUFBTCxDQUFhekIsR0FBRCxJQUFTO0FBQzFCLFVBQU0wQiwrQkFBK0IsR0FDbkNGLG1CQUFtQixLQUFLekIsbUJBQW1CLENBQUNDLEdBQUQsQ0FBbkIsSUFBNEJTLCtCQUErQixDQUFDVCxHQUFELENBQWhFLENBRHJCO0FBRUEsV0FBUSxDQUFDd0IsbUJBQUQsSUFBd0JELFdBQVcsQ0FBQ0ksY0FBWixDQUEyQjNCLEdBQUcsQ0FBQ2UsSUFBL0IsQ0FBekIsSUFDQ1csK0JBQStCLElBQUlILFdBQVcsQ0FBQ0ksY0FBWixDQUEyQjNCLEdBQUcsQ0FBQ2UsSUFBL0IsQ0FEM0M7QUFFRCxHQUxNLENBQVA7QUFNRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb21lbnQsIHsgTW9tZW50IH0gZnJvbSAnbW9tZW50JztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQge1xuICBUcmFuc2FjdGlvbiwgVHJhbnNhY3Rpb25UeXBlcyxcbn0gZnJvbSAnLi4vdHJhbnNhY3Rpb25zJztcblxuZnVuY3Rpb24gaXNOb3JtYWxUcmFuc2FjdGlvbih0eG46IGFueSk6IGJvb2xlYW4ge1xuICByZXR1cm4gdHhuICYmIHR4bi50eXBlID09PSBUcmFuc2FjdGlvblR5cGVzLk5vcm1hbDtcbn1cblxuZnVuY3Rpb24gaXNJbnN0YWxsbWVudFRyYW5zYWN0aW9uKHR4bjogYW55KTogYm9vbGVhbiB7XG4gIHJldHVybiB0eG4gJiYgdHhuLnR5cGUgPT09IFRyYW5zYWN0aW9uVHlwZXMuSW5zdGFsbG1lbnRzO1xufVxuXG5mdW5jdGlvbiBpc05vbkluaXRpYWxJbnN0YWxsbWVudFRyYW5zYWN0aW9uKHR4bjogVHJhbnNhY3Rpb24pOiBib29sZWFuIHtcbiAgcmV0dXJuIGlzSW5zdGFsbG1lbnRUcmFuc2FjdGlvbih0eG4pICYmICEhdHhuLmluc3RhbGxtZW50cyAmJiB0eG4uaW5zdGFsbG1lbnRzLm51bWJlciA+IDE7XG59XG5cbmZ1bmN0aW9uIGlzSW5pdGlhbEluc3RhbGxtZW50VHJhbnNhY3Rpb24odHhuOiBUcmFuc2FjdGlvbik6IGJvb2xlYW4ge1xuICByZXR1cm4gaXNJbnN0YWxsbWVudFRyYW5zYWN0aW9uKHR4bikgJiYgISF0eG4uaW5zdGFsbG1lbnRzICYmIHR4bi5pbnN0YWxsbWVudHMubnVtYmVyID09PSAxO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZml4SW5zdGFsbG1lbnRzKHR4bnM6IFRyYW5zYWN0aW9uW10pOiBUcmFuc2FjdGlvbltdIHtcbiAgcmV0dXJuIHR4bnMubWFwKCh0eG46IFRyYW5zYWN0aW9uKSA9PiB7XG4gICAgY29uc3QgY2xvbmVkVHhuID0geyAuLi50eG4gfTtcblxuICAgIGlmIChpc0luc3RhbGxtZW50VHJhbnNhY3Rpb24oY2xvbmVkVHhuKSAmJiBpc05vbkluaXRpYWxJbnN0YWxsbWVudFRyYW5zYWN0aW9uKGNsb25lZFR4bikgJiZcbiAgICAgIGNsb25lZFR4bi5pbnN0YWxsbWVudHMpIHtcbiAgICAgIGNvbnN0IGRhdGVNb21lbnQgPSBtb21lbnQoY2xvbmVkVHhuLmRhdGUpO1xuICAgICAgY29uc3QgYWN0dWFsRGF0ZU1vbWVudCA9IGRhdGVNb21lbnQuYWRkKGNsb25lZFR4bi5pbnN0YWxsbWVudHMubnVtYmVyIC0gMSwgJ21vbnRoJyk7XG4gICAgICBjbG9uZWRUeG4uZGF0ZSA9IGFjdHVhbERhdGVNb21lbnQudG9JU09TdHJpbmcoKTtcbiAgICB9XG4gICAgcmV0dXJuIGNsb25lZFR4bjtcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzb3J0VHJhbnNhY3Rpb25zQnlEYXRlKHR4bnM6IFRyYW5zYWN0aW9uW10pIHtcbiAgcmV0dXJuIF8uc29ydEJ5KHR4bnMsIFsnZGF0ZSddKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZpbHRlck9sZFRyYW5zYWN0aW9ucyh0eG5zOiBUcmFuc2FjdGlvbltdLFxuICBzdGFydE1vbWVudDogTW9tZW50LCBjb21iaW5lSW5zdGFsbG1lbnRzOiBib29sZWFuKSB7XG4gIHJldHVybiB0eG5zLmZpbHRlcigodHhuKSA9PiB7XG4gICAgY29uc3QgY29tYmluZU5lZWRlZEFuZEluaXRpYWxPck5vcm1hbCA9XG4gICAgICBjb21iaW5lSW5zdGFsbG1lbnRzICYmIChpc05vcm1hbFRyYW5zYWN0aW9uKHR4bikgfHwgaXNJbml0aWFsSW5zdGFsbG1lbnRUcmFuc2FjdGlvbih0eG4pKTtcbiAgICByZXR1cm4gKCFjb21iaW5lSW5zdGFsbG1lbnRzICYmIHN0YXJ0TW9tZW50LmlzU2FtZU9yQmVmb3JlKHR4bi5kYXRlKSkgfHxcbiAgICAgICAgICAgKGNvbWJpbmVOZWVkZWRBbmRJbml0aWFsT3JOb3JtYWwgJiYgc3RhcnRNb21lbnQuaXNTYW1lT3JCZWZvcmUodHhuLmRhdGUpKTtcbiAgfSk7XG59XG4iXX0=